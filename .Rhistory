# wps.des: timeSeriesConverter, title = Convert time series to weekly,
# abstract = Convert time series to weekly;
# wps.in: url, string;
# wps.in: interval, string;
# wps.in: stat, string;
# wps.out: output, text;
library(WaterML)
library(xts)
#server <- gsub("!", "=", url)
#server <- gsub("~", "&", server)
#TEST
server <- "http://worldwater.byu.edu/app/index.php/byu_test_justin/services/cuahsi_1_1.asmx/GetValuesObject?location=byu_test_justin:B-Lw&variable=byu_test_justin:WATER&startDate=&endDate="
values <- GetValues(server)
interval = "weekly"
#get time series object
ts <- xts(values$DataValue, order.by = values$time)
#convert to weekly
if (interval == "weekly")
{
ts_weekly <- apply.weekly(ts,mean)
final_ts <- ts_weekly
}
#convert to monthly
if (interval == "monthly")
{
ts_monthly<- apply.monthly(ts, mean)
#Converting the time so it displays as the first day of the month
date<- as.Date(as.yearmon(time(ts_monthly)))
value <- as.double(ts_monthly)
monthly_data <- data.frame(date,value)
final_ts <- xts(monthly_data$value, order.by = date)
}
#plot(ts_weekly)
plot(final_ts)
#write the output
output <- "Weekly Values"
write.zoo(final_ts,output)
# wps.des: timeSeriesConverter, title = Convert time series to weekly,
# abstract = Convert time series to weekly;
# wps.in: url, string;
# wps.in: interval, string;
# wps.in: stat, string;
# wps.out: output, text;
library(WaterML)
library(xts)
#server <- gsub("!", "=", url)
#server <- gsub("~", "&", server)
#TEST
server <- "http://worldwater.byu.edu/app/index.php/byu_test_justin/services/cuahsi_1_1.asmx/GetValuesObject?location=byu_test_justin:B-Lw&variable=byu_test_justin:WATER&startDate=&endDate="
values <- GetValues(server)
interval = "monthly"
#get time series object
ts <- xts(values$DataValue, order.by = values$time)
#convert to weekly
if (interval == "weekly")
{
ts_weekly <- apply.weekly(ts,mean)
final_ts <- ts_weekly
}
#convert to monthly
if (interval == "monthly")
{
ts_monthly<- apply.monthly(ts, mean)
#Converting the time so it displays as the first day of the month
date<- as.Date(as.yearmon(time(ts_monthly)))
value <- as.double(ts_monthly)
monthly_data <- data.frame(date,value)
final_ts <- xts(monthly_data$value, order.by = date)
}
#plot(ts_weekly)
plot(final_ts)
#write the output
output <- "Weekly Values"
write.zoo(final_ts,output)
# wps.des: timeSeriesConverter, title = Convert time series to weekly,
# abstract = Convert time series to weekly;
# wps.in: url, string;
# wps.in: interval, string;
# wps.in: stat, string;
# wps.out: output, text;
library(WaterML)
library(xts)
#server <- gsub("!", "=", url)
#server <- gsub("~", "&", server)
#TEST
server <- "http://worldwater.byu.edu/app/index.php/byu_test_justin/services/cuahsi_1_1.asmx/GetValuesObject?location=byu_test_justin:B-Lw&variable=byu_test_justin:WATER&startDate=&endDate="
values <- GetValues(server)
interval = "monthly"
#get time series object
ts <- xts(values$DataValue, order.by = values$time)
#convert to weekly
if (interval == "weekly")
{
ts_weekly <- apply.weekly(ts,mean)
final_ts <- ts_weekly
}
#convert to monthly
if (interval == "monthly")
{
ts_monthly<- apply.monthly(ts, median)
#Converting the time so it displays as the first day of the month
date<- as.Date(as.yearmon(time(ts_monthly)))
value <- as.double(ts_monthly)
monthly_data <- data.frame(date,value)
final_ts <- xts(monthly_data$value, order.by = date)
}
#plot(ts_weekly)
plot(final_ts)
#write the output
output <- "Weekly Values"
write.zoo(final_ts,output)
# wps.des: timeSeriesConverter, title = Convert time series to weekly,
# abstract = Convert time series to weekly;
# wps.in: url, string;
# wps.in: interval, string;
# wps.in: stat, string;
# wps.out: output, text;
library(WaterML)
library(xts)
#server <- gsub("!", "=", url)
#server <- gsub("~", "&", server)
#TEST
server <- "http://worldwater.byu.edu/app/index.php/byu_test_justin/services/cuahsi_1_1.asmx/GetValuesObject?location=byu_test_justin:B-Lw&variable=byu_test_justin:WATER&startDate=&endDate="
values <- GetValues(server)
interval = "monthly"
#get time series object
ts <- xts(values$DataValue, order.by = values$time)
#convert to weekly
if (interval == "weekly")
{
ts_weekly <- apply.weekly(ts,mean)
final_ts <- ts_weekly
}
#convert to monthly
if (interval == "monthly")
{
ts_monthly<- apply.monthly(ts, mode)
#Converting the time so it displays as the first day of the month
date<- as.Date(as.yearmon(time(ts_monthly)))
value <- as.double(ts_monthly)
monthly_data <- data.frame(date,value)
final_ts <- xts(monthly_data$value, order.by = date)
}
#plot(ts_weekly)
plot(final_ts)
#write the output
output <- "Weekly Values"
write.zoo(final_ts,output)
ts_monthly<- apply.monthly(ts, median)
# wps.des: timeSeriesConverter, title = Convert time series to weekly,
# abstract = Convert time series to weekly;
# wps.in: url, string;
# wps.in: interval, string;
# wps.in: stat, string;
# wps.out: output, text;
library(WaterML)
library(xts)
#server <- gsub("!", "=", url)
#server <- gsub("~", "&", server)
#TEST
server <- "http://worldwater.byu.edu/app/index.php/byu_test_justin/services/cuahsi_1_1.asmx/GetValuesObject?location=byu_test_justin:B-Lw&variable=byu_test_justin:WATER&startDate=&endDate="
values <- GetValues(server)
interval = "monthly"
#get time series object
ts <- xts(values$DataValue, order.by = values$time)
#convert to weekly
if (interval == "weekly")
{
ts_weekly <- apply.weekly(ts,mean)
final_ts <- ts_weekly
}
#convert to monthly
if (interval == "monthly")
{
ts_monthly<- apply.monthly(ts, median)
#Converting the time so it displays as the first day of the month
date<- as.Date(as.yearmon(time(ts_monthly)))
value <- as.double(ts_monthly)
monthly_data <- data.frame(date,value)
final_ts <- xts(monthly_data$value, order.by = date)
}
#plot(ts_weekly)
plot(final_ts)
#write the output
output <- "Weekly Values"
write.zoo(final_ts,output)
# wps.des: timeSeriesConverter, title = Convert time series to weekly,
# abstract = Convert time series to weekly;
# wps.in: url, string;
# wps.in: interval, string;
# wps.in: stat, string;
# wps.out: output, text;
library(WaterML)
library(xts)
#server <- gsub("!", "=", url)
#server <- gsub("~", "&", server)
#TEST
server <- "http://worldwater.byu.edu/app/index.php/byu_test_justin/services/cuahsi_1_1.asmx/GetValuesObject?location=byu_test_justin:B-Lw&variable=byu_test_justin:WATER&startDate=&endDate="
values <- GetValues(server)
interval = "weekly"
#get time series object
ts <- xts(values$DataValue, order.by = values$time)
#convert to weekly
if (interval == "weekly")
{
ts_weekly <- apply.weekly(ts,mode)
final_ts <- ts_weekly
}
#convert to monthly
if (interval == "monthly")
{
ts_monthly<- apply.monthly(ts, median)
#Converting the time so it displays as the first day of the month
date<- as.Date(as.yearmon(time(ts_monthly)))
value <- as.double(ts_monthly)
monthly_data <- data.frame(date,value)
final_ts <- xts(monthly_data$value, order.by = date)
}
#plot(ts_weekly)
plot(final_ts)
#write the output
output <- "Weekly Values"
write.zoo(final_ts,output)
View(ts_weekly)
